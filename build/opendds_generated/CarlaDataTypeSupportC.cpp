// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p25
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:382


#include "CarlaDataTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "CarlaDataTypeSupportC.inl"
#endif /* !defined INLINE */
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::RadarSensorTypeSupport.

CarlaData::RadarSensorTypeSupport_ptr
TAO::Objref_Traits<CarlaData::RadarSensorTypeSupport>::duplicate (
    CarlaData::RadarSensorTypeSupport_ptr p)
{
  return CarlaData::RadarSensorTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::RadarSensorTypeSupport>::release (
    CarlaData::RadarSensorTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::RadarSensorTypeSupport_ptr
TAO::Objref_Traits<CarlaData::RadarSensorTypeSupport>::nil (void)
{
  return CarlaData::RadarSensorTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::RadarSensorTypeSupport>::marshal (
    const CarlaData::RadarSensorTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::RadarSensorTypeSupport::RadarSensorTypeSupport (void)
{}

CarlaData::RadarSensorTypeSupport::~RadarSensorTypeSupport (void)
{
}

CarlaData::RadarSensorTypeSupport_ptr
CarlaData::RadarSensorTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RadarSensorTypeSupport::_duplicate (
      dynamic_cast<RadarSensorTypeSupport_ptr> (_tao_objref)
    );
}

CarlaData::RadarSensorTypeSupport_ptr
CarlaData::RadarSensorTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RadarSensorTypeSupport::_duplicate (
      dynamic_cast<RadarSensorTypeSupport_ptr> (_tao_objref)
    );
}

CarlaData::RadarSensorTypeSupport_ptr
CarlaData::RadarSensorTypeSupport::_nil (void)
{
  return 0;
}

CarlaData::RadarSensorTypeSupport_ptr
CarlaData::RadarSensorTypeSupport::_duplicate (RadarSensorTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::RadarSensorTypeSupport::_tao_release (RadarSensorTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::RadarSensorTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/RadarSensorTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::RadarSensorTypeSupport::_interface_repository_id (void) const
{
  return "IDL:CarlaData/RadarSensorTypeSupport:1.0";
}

::CORBA::Boolean
CarlaData::RadarSensorTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::RadarSensorDataWriter.

CarlaData::RadarSensorDataWriter_ptr
TAO::Objref_Traits<CarlaData::RadarSensorDataWriter>::duplicate (
    CarlaData::RadarSensorDataWriter_ptr p)
{
  return CarlaData::RadarSensorDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::RadarSensorDataWriter>::release (
    CarlaData::RadarSensorDataWriter_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::RadarSensorDataWriter_ptr
TAO::Objref_Traits<CarlaData::RadarSensorDataWriter>::nil (void)
{
  return CarlaData::RadarSensorDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::RadarSensorDataWriter>::marshal (
    const CarlaData::RadarSensorDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::RadarSensorDataWriter::RadarSensorDataWriter (void)
{}

CarlaData::RadarSensorDataWriter::~RadarSensorDataWriter (void)
{
}

CarlaData::RadarSensorDataWriter_ptr
CarlaData::RadarSensorDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RadarSensorDataWriter::_duplicate (
      dynamic_cast<RadarSensorDataWriter_ptr> (_tao_objref)
    );
}

CarlaData::RadarSensorDataWriter_ptr
CarlaData::RadarSensorDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RadarSensorDataWriter::_duplicate (
      dynamic_cast<RadarSensorDataWriter_ptr> (_tao_objref)
    );
}

CarlaData::RadarSensorDataWriter_ptr
CarlaData::RadarSensorDataWriter::_nil (void)
{
  return 0;
}

CarlaData::RadarSensorDataWriter_ptr
CarlaData::RadarSensorDataWriter::_duplicate (RadarSensorDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::RadarSensorDataWriter::_tao_release (RadarSensorDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::RadarSensorDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/RadarSensorDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::RadarSensorDataWriter::_interface_repository_id (void) const
{
  return "IDL:CarlaData/RadarSensorDataWriter:1.0";
}

::CORBA::Boolean
CarlaData::RadarSensorDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::RadarSensorDataReader.

CarlaData::RadarSensorDataReader_ptr
TAO::Objref_Traits<CarlaData::RadarSensorDataReader>::duplicate (
    CarlaData::RadarSensorDataReader_ptr p)
{
  return CarlaData::RadarSensorDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::RadarSensorDataReader>::release (
    CarlaData::RadarSensorDataReader_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::RadarSensorDataReader_ptr
TAO::Objref_Traits<CarlaData::RadarSensorDataReader>::nil (void)
{
  return CarlaData::RadarSensorDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::RadarSensorDataReader>::marshal (
    const CarlaData::RadarSensorDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::RadarSensorDataReader::RadarSensorDataReader (void)
{}

CarlaData::RadarSensorDataReader::~RadarSensorDataReader (void)
{
}

CarlaData::RadarSensorDataReader_ptr
CarlaData::RadarSensorDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RadarSensorDataReader::_duplicate (
      dynamic_cast<RadarSensorDataReader_ptr> (_tao_objref)
    );
}

CarlaData::RadarSensorDataReader_ptr
CarlaData::RadarSensorDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return RadarSensorDataReader::_duplicate (
      dynamic_cast<RadarSensorDataReader_ptr> (_tao_objref)
    );
}

CarlaData::RadarSensorDataReader_ptr
CarlaData::RadarSensorDataReader::_nil (void)
{
  return 0;
}

CarlaData::RadarSensorDataReader_ptr
CarlaData::RadarSensorDataReader::_duplicate (RadarSensorDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::RadarSensorDataReader::_tao_release (RadarSensorDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::RadarSensorDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/RadarSensorDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::RadarSensorDataReader::_interface_repository_id (void) const
{
  return "IDL:CarlaData/RadarSensorDataReader:1.0";
}

::CORBA::Boolean
CarlaData::RadarSensorDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::VehicleOdometryTypeSupport.

CarlaData::VehicleOdometryTypeSupport_ptr
TAO::Objref_Traits<CarlaData::VehicleOdometryTypeSupport>::duplicate (
    CarlaData::VehicleOdometryTypeSupport_ptr p)
{
  return CarlaData::VehicleOdometryTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::VehicleOdometryTypeSupport>::release (
    CarlaData::VehicleOdometryTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::VehicleOdometryTypeSupport_ptr
TAO::Objref_Traits<CarlaData::VehicleOdometryTypeSupport>::nil (void)
{
  return CarlaData::VehicleOdometryTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::VehicleOdometryTypeSupport>::marshal (
    const CarlaData::VehicleOdometryTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::VehicleOdometryTypeSupport::VehicleOdometryTypeSupport (void)
{}

CarlaData::VehicleOdometryTypeSupport::~VehicleOdometryTypeSupport (void)
{
}

CarlaData::VehicleOdometryTypeSupport_ptr
CarlaData::VehicleOdometryTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return VehicleOdometryTypeSupport::_duplicate (
      dynamic_cast<VehicleOdometryTypeSupport_ptr> (_tao_objref)
    );
}

CarlaData::VehicleOdometryTypeSupport_ptr
CarlaData::VehicleOdometryTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return VehicleOdometryTypeSupport::_duplicate (
      dynamic_cast<VehicleOdometryTypeSupport_ptr> (_tao_objref)
    );
}

CarlaData::VehicleOdometryTypeSupport_ptr
CarlaData::VehicleOdometryTypeSupport::_nil (void)
{
  return 0;
}

CarlaData::VehicleOdometryTypeSupport_ptr
CarlaData::VehicleOdometryTypeSupport::_duplicate (VehicleOdometryTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::VehicleOdometryTypeSupport::_tao_release (VehicleOdometryTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::VehicleOdometryTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/VehicleOdometryTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::VehicleOdometryTypeSupport::_interface_repository_id (void) const
{
  return "IDL:CarlaData/VehicleOdometryTypeSupport:1.0";
}

::CORBA::Boolean
CarlaData::VehicleOdometryTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::VehicleOdometryDataWriter.

CarlaData::VehicleOdometryDataWriter_ptr
TAO::Objref_Traits<CarlaData::VehicleOdometryDataWriter>::duplicate (
    CarlaData::VehicleOdometryDataWriter_ptr p)
{
  return CarlaData::VehicleOdometryDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::VehicleOdometryDataWriter>::release (
    CarlaData::VehicleOdometryDataWriter_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::VehicleOdometryDataWriter_ptr
TAO::Objref_Traits<CarlaData::VehicleOdometryDataWriter>::nil (void)
{
  return CarlaData::VehicleOdometryDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::VehicleOdometryDataWriter>::marshal (
    const CarlaData::VehicleOdometryDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::VehicleOdometryDataWriter::VehicleOdometryDataWriter (void)
{}

CarlaData::VehicleOdometryDataWriter::~VehicleOdometryDataWriter (void)
{
}

CarlaData::VehicleOdometryDataWriter_ptr
CarlaData::VehicleOdometryDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return VehicleOdometryDataWriter::_duplicate (
      dynamic_cast<VehicleOdometryDataWriter_ptr> (_tao_objref)
    );
}

CarlaData::VehicleOdometryDataWriter_ptr
CarlaData::VehicleOdometryDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return VehicleOdometryDataWriter::_duplicate (
      dynamic_cast<VehicleOdometryDataWriter_ptr> (_tao_objref)
    );
}

CarlaData::VehicleOdometryDataWriter_ptr
CarlaData::VehicleOdometryDataWriter::_nil (void)
{
  return 0;
}

CarlaData::VehicleOdometryDataWriter_ptr
CarlaData::VehicleOdometryDataWriter::_duplicate (VehicleOdometryDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::VehicleOdometryDataWriter::_tao_release (VehicleOdometryDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::VehicleOdometryDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/VehicleOdometryDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::VehicleOdometryDataWriter::_interface_repository_id (void) const
{
  return "IDL:CarlaData/VehicleOdometryDataWriter:1.0";
}

::CORBA::Boolean
CarlaData::VehicleOdometryDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::VehicleOdometryDataReader.

CarlaData::VehicleOdometryDataReader_ptr
TAO::Objref_Traits<CarlaData::VehicleOdometryDataReader>::duplicate (
    CarlaData::VehicleOdometryDataReader_ptr p)
{
  return CarlaData::VehicleOdometryDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::VehicleOdometryDataReader>::release (
    CarlaData::VehicleOdometryDataReader_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::VehicleOdometryDataReader_ptr
TAO::Objref_Traits<CarlaData::VehicleOdometryDataReader>::nil (void)
{
  return CarlaData::VehicleOdometryDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::VehicleOdometryDataReader>::marshal (
    const CarlaData::VehicleOdometryDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::VehicleOdometryDataReader::VehicleOdometryDataReader (void)
{}

CarlaData::VehicleOdometryDataReader::~VehicleOdometryDataReader (void)
{
}

CarlaData::VehicleOdometryDataReader_ptr
CarlaData::VehicleOdometryDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return VehicleOdometryDataReader::_duplicate (
      dynamic_cast<VehicleOdometryDataReader_ptr> (_tao_objref)
    );
}

CarlaData::VehicleOdometryDataReader_ptr
CarlaData::VehicleOdometryDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return VehicleOdometryDataReader::_duplicate (
      dynamic_cast<VehicleOdometryDataReader_ptr> (_tao_objref)
    );
}

CarlaData::VehicleOdometryDataReader_ptr
CarlaData::VehicleOdometryDataReader::_nil (void)
{
  return 0;
}

CarlaData::VehicleOdometryDataReader_ptr
CarlaData::VehicleOdometryDataReader::_duplicate (VehicleOdometryDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::VehicleOdometryDataReader::_tao_release (VehicleOdometryDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::VehicleOdometryDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/VehicleOdometryDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::VehicleOdometryDataReader::_interface_repository_id (void) const
{
  return "IDL:CarlaData/VehicleOdometryDataReader:1.0";
}

::CORBA::Boolean
CarlaData::VehicleOdometryDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::ImageSensorTypeSupport.

CarlaData::ImageSensorTypeSupport_ptr
TAO::Objref_Traits<CarlaData::ImageSensorTypeSupport>::duplicate (
    CarlaData::ImageSensorTypeSupport_ptr p)
{
  return CarlaData::ImageSensorTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::ImageSensorTypeSupport>::release (
    CarlaData::ImageSensorTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::ImageSensorTypeSupport_ptr
TAO::Objref_Traits<CarlaData::ImageSensorTypeSupport>::nil (void)
{
  return CarlaData::ImageSensorTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::ImageSensorTypeSupport>::marshal (
    const CarlaData::ImageSensorTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::ImageSensorTypeSupport::ImageSensorTypeSupport (void)
{}

CarlaData::ImageSensorTypeSupport::~ImageSensorTypeSupport (void)
{
}

CarlaData::ImageSensorTypeSupport_ptr
CarlaData::ImageSensorTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ImageSensorTypeSupport::_duplicate (
      dynamic_cast<ImageSensorTypeSupport_ptr> (_tao_objref)
    );
}

CarlaData::ImageSensorTypeSupport_ptr
CarlaData::ImageSensorTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ImageSensorTypeSupport::_duplicate (
      dynamic_cast<ImageSensorTypeSupport_ptr> (_tao_objref)
    );
}

CarlaData::ImageSensorTypeSupport_ptr
CarlaData::ImageSensorTypeSupport::_nil (void)
{
  return 0;
}

CarlaData::ImageSensorTypeSupport_ptr
CarlaData::ImageSensorTypeSupport::_duplicate (ImageSensorTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::ImageSensorTypeSupport::_tao_release (ImageSensorTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::ImageSensorTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/ImageSensorTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::ImageSensorTypeSupport::_interface_repository_id (void) const
{
  return "IDL:CarlaData/ImageSensorTypeSupport:1.0";
}

::CORBA::Boolean
CarlaData::ImageSensorTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::ImageSensorDataWriter.

CarlaData::ImageSensorDataWriter_ptr
TAO::Objref_Traits<CarlaData::ImageSensorDataWriter>::duplicate (
    CarlaData::ImageSensorDataWriter_ptr p)
{
  return CarlaData::ImageSensorDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::ImageSensorDataWriter>::release (
    CarlaData::ImageSensorDataWriter_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::ImageSensorDataWriter_ptr
TAO::Objref_Traits<CarlaData::ImageSensorDataWriter>::nil (void)
{
  return CarlaData::ImageSensorDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::ImageSensorDataWriter>::marshal (
    const CarlaData::ImageSensorDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::ImageSensorDataWriter::ImageSensorDataWriter (void)
{}

CarlaData::ImageSensorDataWriter::~ImageSensorDataWriter (void)
{
}

CarlaData::ImageSensorDataWriter_ptr
CarlaData::ImageSensorDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ImageSensorDataWriter::_duplicate (
      dynamic_cast<ImageSensorDataWriter_ptr> (_tao_objref)
    );
}

CarlaData::ImageSensorDataWriter_ptr
CarlaData::ImageSensorDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ImageSensorDataWriter::_duplicate (
      dynamic_cast<ImageSensorDataWriter_ptr> (_tao_objref)
    );
}

CarlaData::ImageSensorDataWriter_ptr
CarlaData::ImageSensorDataWriter::_nil (void)
{
  return 0;
}

CarlaData::ImageSensorDataWriter_ptr
CarlaData::ImageSensorDataWriter::_duplicate (ImageSensorDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::ImageSensorDataWriter::_tao_release (ImageSensorDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::ImageSensorDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/ImageSensorDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::ImageSensorDataWriter::_interface_repository_id (void) const
{
  return "IDL:CarlaData/ImageSensorDataWriter:1.0";
}

::CORBA::Boolean
CarlaData::ImageSensorDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}
// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:50


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Traits specializations for CarlaData::ImageSensorDataReader.

CarlaData::ImageSensorDataReader_ptr
TAO::Objref_Traits<CarlaData::ImageSensorDataReader>::duplicate (
    CarlaData::ImageSensorDataReader_ptr p)
{
  return CarlaData::ImageSensorDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<CarlaData::ImageSensorDataReader>::release (
    CarlaData::ImageSensorDataReader_ptr p)
{
  ::CORBA::release (p);
}

CarlaData::ImageSensorDataReader_ptr
TAO::Objref_Traits<CarlaData::ImageSensorDataReader>::nil (void)
{
  return CarlaData::ImageSensorDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<CarlaData::ImageSensorDataReader>::marshal (
    const CarlaData::ImageSensorDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}
TAO_END_VERSIONED_NAMESPACE_DECL


CarlaData::ImageSensorDataReader::ImageSensorDataReader (void)
{}

CarlaData::ImageSensorDataReader::~ImageSensorDataReader (void)
{
}

CarlaData::ImageSensorDataReader_ptr
CarlaData::ImageSensorDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ImageSensorDataReader::_duplicate (
      dynamic_cast<ImageSensorDataReader_ptr> (_tao_objref)
    );
}

CarlaData::ImageSensorDataReader_ptr
CarlaData::ImageSensorDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ImageSensorDataReader::_duplicate (
      dynamic_cast<ImageSensorDataReader_ptr> (_tao_objref)
    );
}

CarlaData::ImageSensorDataReader_ptr
CarlaData::ImageSensorDataReader::_nil (void)
{
  return 0;
}

CarlaData::ImageSensorDataReader_ptr
CarlaData::ImageSensorDataReader::_duplicate (ImageSensorDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
CarlaData::ImageSensorDataReader::_tao_release (ImageSensorDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
CarlaData::ImageSensorDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:CarlaData/ImageSensorDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* CarlaData::ImageSensorDataReader::_interface_repository_id (void) const
{
  return "IDL:CarlaData/ImageSensorDataReader:1.0";
}

::CORBA::Boolean
CarlaData::ImageSensorDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

