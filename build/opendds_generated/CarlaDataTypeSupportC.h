// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p25
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:151

#ifndef _TAO_IDL__MEDIA_SDV_47D6B45A_AFD5_40A2_B8AE_C185573D86AB_IMAGE_DDS_CODE_YASHESVI_CARLABRIDGE_END_BUILD_OPENDDS_GENERATED_CARLADATATYPESUPPORTC_H_
#define _TAO_IDL__MEDIA_SDV_47D6B45A_AFD5_40A2_B8AE_C185573D86AB_IMAGE_DDS_CODE_YASHESVI_CARLABRIDGE_END_BUILD_OPENDDS_GENERATED_CARLADATATYPESUPPORTC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "CarlaDataC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 
// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:37

namespace CarlaData
{

  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< CarlaData::RadarSensor, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> RadarSensorSeq;
  
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_RADARSENSORTYPESUPPORT__VAR_OUT_CH_)
#define _CARLADATA_RADARSENSORTYPESUPPORT__VAR_OUT_CH_

  class RadarSensorTypeSupport;
  typedef RadarSensorTypeSupport *RadarSensorTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        RadarSensorTypeSupport
      >
    RadarSensorTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        RadarSensorTypeSupport
      >
    RadarSensorTypeSupport_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  RadarSensorTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef RadarSensorTypeSupport_ptr _ptr_type;
    typedef RadarSensorTypeSupport_var _var_type;
    typedef RadarSensorTypeSupport_out _out_type;

    // The static operations.
    static RadarSensorTypeSupport_ptr _duplicate (RadarSensorTypeSupport_ptr obj);

    static void _tao_release (RadarSensorTypeSupport_ptr obj);

    static RadarSensorTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static RadarSensorTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RadarSensorTypeSupport_ptr _nil (void);

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RadarSensorTypeSupport (void);

    

    virtual ~RadarSensorTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (RadarSensorTypeSupport (const RadarSensorTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RadarSensorTypeSupport (RadarSensorTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (RadarSensorTypeSupport &operator= (const RadarSensorTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RadarSensorTypeSupport &operator= (RadarSensorTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_RADARSENSORDATAWRITER__VAR_OUT_CH_)
#define _CARLADATA_RADARSENSORDATAWRITER__VAR_OUT_CH_

  class RadarSensorDataWriter;
  typedef RadarSensorDataWriter *RadarSensorDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        RadarSensorDataWriter
      >
    RadarSensorDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        RadarSensorDataWriter
      >
    RadarSensorDataWriter_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  RadarSensorDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef RadarSensorDataWriter_ptr _ptr_type;
    typedef RadarSensorDataWriter_var _var_type;
    typedef RadarSensorDataWriter_out _out_type;

    // The static operations.
    static RadarSensorDataWriter_ptr _duplicate (RadarSensorDataWriter_ptr obj);

    static void _tao_release (RadarSensorDataWriter_ptr obj);

    static RadarSensorDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static RadarSensorDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RadarSensorDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::CarlaData::RadarSensor & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::CarlaData::RadarSensor & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::CarlaData::RadarSensor & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::CarlaData::RadarSensor & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::CarlaData::RadarSensor & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::CarlaData::RadarSensor & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::CarlaData::RadarSensor & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::CarlaData::RadarSensor & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::CarlaData::RadarSensor & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::CarlaData::RadarSensor & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RadarSensorDataWriter (void);

    

    virtual ~RadarSensorDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataWriter (const RadarSensorDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataWriter (RadarSensorDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataWriter &operator= (const RadarSensorDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataWriter &operator= (RadarSensorDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_RADARSENSORDATAREADER__VAR_OUT_CH_)
#define _CARLADATA_RADARSENSORDATAREADER__VAR_OUT_CH_

  class RadarSensorDataReader;
  typedef RadarSensorDataReader *RadarSensorDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        RadarSensorDataReader
      >
    RadarSensorDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        RadarSensorDataReader
      >
    RadarSensorDataReader_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  RadarSensorDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef RadarSensorDataReader_ptr _ptr_type;
    typedef RadarSensorDataReader_var _var_type;
    typedef RadarSensorDataReader_out _out_type;

    // The static operations.
    static RadarSensorDataReader_ptr _duplicate (RadarSensorDataReader_ptr obj);

    static void _tao_release (RadarSensorDataReader_ptr obj);

    static RadarSensorDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static RadarSensorDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static RadarSensorDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::CarlaData::RadarSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::CarlaData::RadarSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::CarlaData::RadarSensor & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::CarlaData::RadarSensor & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::CarlaData::RadarSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::CarlaData::RadarSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::CarlaData::RadarSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::CarlaData::RadarSensor & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::CarlaData::RadarSensor & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    RadarSensorDataReader (void);

    

    virtual ~RadarSensorDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataReader (const RadarSensorDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataReader (RadarSensorDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataReader &operator= (const RadarSensorDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (RadarSensorDataReader &operator= (RadarSensorDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:65


} // module CarlaData
// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:37

namespace CarlaData
{

  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< CarlaData::VehicleOdometry, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> VehicleOdometrySeq;
  
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_VEHICLEODOMETRYTYPESUPPORT__VAR_OUT_CH_)
#define _CARLADATA_VEHICLEODOMETRYTYPESUPPORT__VAR_OUT_CH_

  class VehicleOdometryTypeSupport;
  typedef VehicleOdometryTypeSupport *VehicleOdometryTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        VehicleOdometryTypeSupport
      >
    VehicleOdometryTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        VehicleOdometryTypeSupport
      >
    VehicleOdometryTypeSupport_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  VehicleOdometryTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef VehicleOdometryTypeSupport_ptr _ptr_type;
    typedef VehicleOdometryTypeSupport_var _var_type;
    typedef VehicleOdometryTypeSupport_out _out_type;

    // The static operations.
    static VehicleOdometryTypeSupport_ptr _duplicate (VehicleOdometryTypeSupport_ptr obj);

    static void _tao_release (VehicleOdometryTypeSupport_ptr obj);

    static VehicleOdometryTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static VehicleOdometryTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static VehicleOdometryTypeSupport_ptr _nil (void);

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    VehicleOdometryTypeSupport (void);

    

    virtual ~VehicleOdometryTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryTypeSupport (const VehicleOdometryTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryTypeSupport (VehicleOdometryTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryTypeSupport &operator= (const VehicleOdometryTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryTypeSupport &operator= (VehicleOdometryTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_VEHICLEODOMETRYDATAWRITER__VAR_OUT_CH_)
#define _CARLADATA_VEHICLEODOMETRYDATAWRITER__VAR_OUT_CH_

  class VehicleOdometryDataWriter;
  typedef VehicleOdometryDataWriter *VehicleOdometryDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        VehicleOdometryDataWriter
      >
    VehicleOdometryDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        VehicleOdometryDataWriter
      >
    VehicleOdometryDataWriter_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  VehicleOdometryDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef VehicleOdometryDataWriter_ptr _ptr_type;
    typedef VehicleOdometryDataWriter_var _var_type;
    typedef VehicleOdometryDataWriter_out _out_type;

    // The static operations.
    static VehicleOdometryDataWriter_ptr _duplicate (VehicleOdometryDataWriter_ptr obj);

    static void _tao_release (VehicleOdometryDataWriter_ptr obj);

    static VehicleOdometryDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static VehicleOdometryDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static VehicleOdometryDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::CarlaData::VehicleOdometry & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::CarlaData::VehicleOdometry & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::CarlaData::VehicleOdometry & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::CarlaData::VehicleOdometry & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::CarlaData::VehicleOdometry & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::CarlaData::VehicleOdometry & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::CarlaData::VehicleOdometry & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::CarlaData::VehicleOdometry & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::CarlaData::VehicleOdometry & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::CarlaData::VehicleOdometry & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    VehicleOdometryDataWriter (void);

    

    virtual ~VehicleOdometryDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataWriter (const VehicleOdometryDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataWriter (VehicleOdometryDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataWriter &operator= (const VehicleOdometryDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataWriter &operator= (VehicleOdometryDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_VEHICLEODOMETRYDATAREADER__VAR_OUT_CH_)
#define _CARLADATA_VEHICLEODOMETRYDATAREADER__VAR_OUT_CH_

  class VehicleOdometryDataReader;
  typedef VehicleOdometryDataReader *VehicleOdometryDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        VehicleOdometryDataReader
      >
    VehicleOdometryDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        VehicleOdometryDataReader
      >
    VehicleOdometryDataReader_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  VehicleOdometryDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef VehicleOdometryDataReader_ptr _ptr_type;
    typedef VehicleOdometryDataReader_var _var_type;
    typedef VehicleOdometryDataReader_out _out_type;

    // The static operations.
    static VehicleOdometryDataReader_ptr _duplicate (VehicleOdometryDataReader_ptr obj);

    static void _tao_release (VehicleOdometryDataReader_ptr obj);

    static VehicleOdometryDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static VehicleOdometryDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static VehicleOdometryDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::CarlaData::VehicleOdometrySeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::CarlaData::VehicleOdometrySeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::CarlaData::VehicleOdometry & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::CarlaData::VehicleOdometry & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::CarlaData::VehicleOdometrySeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::CarlaData::VehicleOdometrySeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::CarlaData::VehicleOdometrySeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::CarlaData::VehicleOdometry & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::CarlaData::VehicleOdometry & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    VehicleOdometryDataReader (void);

    

    virtual ~VehicleOdometryDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataReader (const VehicleOdometryDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataReader (VehicleOdometryDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataReader &operator= (const VehicleOdometryDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (VehicleOdometryDataReader &operator= (VehicleOdometryDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:65


} // module CarlaData
// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:37

namespace CarlaData
{

  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

  

  typedef ::TAO::DCPS::ZeroCopyDataSeq< CarlaData::ImageSensor, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> ImageSensorSeq;
  
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_IMAGESENSORTYPESUPPORT__VAR_OUT_CH_)
#define _CARLADATA_IMAGESENSORTYPESUPPORT__VAR_OUT_CH_

  class ImageSensorTypeSupport;
  typedef ImageSensorTypeSupport *ImageSensorTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        ImageSensorTypeSupport
      >
    ImageSensorTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        ImageSensorTypeSupport
      >
    ImageSensorTypeSupport_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  ImageSensorTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef ImageSensorTypeSupport_ptr _ptr_type;
    typedef ImageSensorTypeSupport_var _var_type;
    typedef ImageSensorTypeSupport_out _out_type;

    // The static operations.
    static ImageSensorTypeSupport_ptr _duplicate (ImageSensorTypeSupport_ptr obj);

    static void _tao_release (ImageSensorTypeSupport_ptr obj);

    static ImageSensorTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static ImageSensorTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ImageSensorTypeSupport_ptr _nil (void);

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ImageSensorTypeSupport (void);

    

    virtual ~ImageSensorTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ImageSensorTypeSupport (const ImageSensorTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ImageSensorTypeSupport (ImageSensorTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ImageSensorTypeSupport &operator= (const ImageSensorTypeSupport &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ImageSensorTypeSupport &operator= (ImageSensorTypeSupport &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_IMAGESENSORDATAWRITER__VAR_OUT_CH_)
#define _CARLADATA_IMAGESENSORDATAWRITER__VAR_OUT_CH_

  class ImageSensorDataWriter;
  typedef ImageSensorDataWriter *ImageSensorDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        ImageSensorDataWriter
      >
    ImageSensorDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        ImageSensorDataWriter
      >
    ImageSensorDataWriter_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  ImageSensorDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef ImageSensorDataWriter_ptr _ptr_type;
    typedef ImageSensorDataWriter_var _var_type;
    typedef ImageSensorDataWriter_out _out_type;

    // The static operations.
    static ImageSensorDataWriter_ptr _duplicate (ImageSensorDataWriter_ptr obj);

    static void _tao_release (ImageSensorDataWriter_ptr obj);

    static ImageSensorDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static ImageSensorDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ImageSensorDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::CarlaData::ImageSensor & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::CarlaData::ImageSensor & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::CarlaData::ImageSensor & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::CarlaData::ImageSensor & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::CarlaData::ImageSensor & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::CarlaData::ImageSensor & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::CarlaData::ImageSensor & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::CarlaData::ImageSensor & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::CarlaData::ImageSensor & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::CarlaData::ImageSensor & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ImageSensorDataWriter (void);

    

    virtual ~ImageSensorDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataWriter (const ImageSensorDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataWriter (ImageSensorDataWriter &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataWriter &operator= (const ImageSensorDataWriter &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataWriter &operator= (ImageSensorDataWriter &&))
#endif /* ACE_HAS_CPP11 */
  };
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_CARLADATA_IMAGESENSORDATAREADER__VAR_OUT_CH_)
#define _CARLADATA_IMAGESENSORDATAREADER__VAR_OUT_CH_

  class ImageSensorDataReader;
  typedef ImageSensorDataReader *ImageSensorDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        ImageSensorDataReader
      >
    ImageSensorDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        ImageSensorDataReader
      >
    ImageSensorDataReader_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:42

  

  class  ImageSensorDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef ImageSensorDataReader_ptr _ptr_type;
    typedef ImageSensorDataReader_var _var_type;
    typedef ImageSensorDataReader_out _out_type;

    // The static operations.
    static ImageSensorDataReader_ptr _duplicate (ImageSensorDataReader_ptr obj);

    static void _tao_release (ImageSensorDataReader_ptr obj);

    static ImageSensorDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static ImageSensorDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static ImageSensorDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::CarlaData::ImageSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::CarlaData::ImageSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::CarlaData::ImageSensor & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::CarlaData::ImageSensor & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::CarlaData::ImageSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::CarlaData::ImageSensorSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::CarlaData::ImageSensorSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::CarlaData::ImageSensor & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::CarlaData::ImageSensor & instance_data) = 0;

    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:138

    

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    ImageSensorDataReader (void);

    

    virtual ~ImageSensorDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataReader (const ImageSensorDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataReader (ImageSensorDataReader &&))
#endif /* ACE_HAS_CPP11 */
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataReader &operator= (const ImageSensorDataReader &))
#if defined (ACE_HAS_CPP11)
    ACE_UNIMPLEMENTED_FUNC (ImageSensorDataReader &operator= (ImageSensorDataReader &&))
#endif /* ACE_HAS_CPP11 */
  };


// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:65


} // module CarlaData
// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66



TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60



TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_CARLADATA_RADARSENSORTYPESUPPORT__TRAITS_)
#define _CARLADATA_RADARSENSORTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::RadarSensorTypeSupport>
  {
    static ::CarlaData::RadarSensorTypeSupport_ptr duplicate (
        ::CarlaData::RadarSensorTypeSupport_ptr p);
    static void release (
        ::CarlaData::RadarSensorTypeSupport_ptr p);
    static ::CarlaData::RadarSensorTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::RadarSensorTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_RADARSENSORDATAWRITER__TRAITS_)
#define _CARLADATA_RADARSENSORDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::RadarSensorDataWriter>
  {
    static ::CarlaData::RadarSensorDataWriter_ptr duplicate (
        ::CarlaData::RadarSensorDataWriter_ptr p);
    static void release (
        ::CarlaData::RadarSensorDataWriter_ptr p);
    static ::CarlaData::RadarSensorDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::RadarSensorDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_RADARSENSORDATAREADER__TRAITS_)
#define _CARLADATA_RADARSENSORDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::RadarSensorDataReader>
  {
    static ::CarlaData::RadarSensorDataReader_ptr duplicate (
        ::CarlaData::RadarSensorDataReader_ptr p);
    static void release (
        ::CarlaData::RadarSensorDataReader_ptr p);
    static ::CarlaData::RadarSensorDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::RadarSensorDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_VEHICLEODOMETRYTYPESUPPORT__TRAITS_)
#define _CARLADATA_VEHICLEODOMETRYTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::VehicleOdometryTypeSupport>
  {
    static ::CarlaData::VehicleOdometryTypeSupport_ptr duplicate (
        ::CarlaData::VehicleOdometryTypeSupport_ptr p);
    static void release (
        ::CarlaData::VehicleOdometryTypeSupport_ptr p);
    static ::CarlaData::VehicleOdometryTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::VehicleOdometryTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_VEHICLEODOMETRYDATAWRITER__TRAITS_)
#define _CARLADATA_VEHICLEODOMETRYDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::VehicleOdometryDataWriter>
  {
    static ::CarlaData::VehicleOdometryDataWriter_ptr duplicate (
        ::CarlaData::VehicleOdometryDataWriter_ptr p);
    static void release (
        ::CarlaData::VehicleOdometryDataWriter_ptr p);
    static ::CarlaData::VehicleOdometryDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::VehicleOdometryDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_VEHICLEODOMETRYDATAREADER__TRAITS_)
#define _CARLADATA_VEHICLEODOMETRYDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::VehicleOdometryDataReader>
  {
    static ::CarlaData::VehicleOdometryDataReader_ptr duplicate (
        ::CarlaData::VehicleOdometryDataReader_ptr p);
    static void release (
        ::CarlaData::VehicleOdometryDataReader_ptr p);
    static ::CarlaData::VehicleOdometryDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::VehicleOdometryDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_IMAGESENSORTYPESUPPORT__TRAITS_)
#define _CARLADATA_IMAGESENSORTYPESUPPORT__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::ImageSensorTypeSupport>
  {
    static ::CarlaData::ImageSensorTypeSupport_ptr duplicate (
        ::CarlaData::ImageSensorTypeSupport_ptr p);
    static void release (
        ::CarlaData::ImageSensorTypeSupport_ptr p);
    static ::CarlaData::ImageSensorTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::ImageSensorTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_IMAGESENSORDATAWRITER__TRAITS_)
#define _CARLADATA_IMAGESENSORDATAWRITER__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::ImageSensorDataWriter>
  {
    static ::CarlaData::ImageSensorDataWriter_ptr duplicate (
        ::CarlaData::ImageSensorDataWriter_ptr p);
    static void release (
        ::CarlaData::ImageSensorDataWriter_ptr p);
    static ::CarlaData::ImageSensorDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::ImageSensorDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_CARLADATA_IMAGESENSORDATAREADER__TRAITS_)
#define _CARLADATA_IMAGESENSORDATAREADER__TRAITS_

  template<>
  struct  Objref_Traits< ::CarlaData::ImageSensorDataReader>
  {
    static ::CarlaData::ImageSensorDataReader_ptr duplicate (
        ::CarlaData::ImageSensorDataReader_ptr p);
    static void release (
        ::CarlaData::ImageSensorDataReader_ptr p);
    static ::CarlaData::ImageSensorDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::CarlaData::ImageSensorDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_codegen.cpp:1666

#if defined (__ACE_INLINE__)
#include "CarlaDataTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

