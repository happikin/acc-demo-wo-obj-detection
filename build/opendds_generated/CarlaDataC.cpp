// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p25
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:382


#include "CarlaDataC.h"
#include "tao/CDR.h"
#include "tao/ORB_Core.h"

#if !defined (__ACE_INLINE__)
#include "CarlaDataC.inl"
#endif /* !defined INLINE */


// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:107



#if !defined (_CARLADATA_IMAGESENSOR__TAO_SEQ_CORBA_OCTET__CS_)
#define _CARLADATA_IMAGESENSOR__TAO_SEQ_CORBA_OCTET__CS_

CarlaData::ImageSensor::_tao_seq_CORBA_Octet_::_tao_seq_CORBA_Octet_ (void)
{}

CarlaData::ImageSensor::_tao_seq_CORBA_Octet_::_tao_seq_CORBA_Octet_ (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence< ::CORBA::Octet> (max)
{}

CarlaData::ImageSensor::_tao_seq_CORBA_Octet_::_tao_seq_CORBA_Octet_ (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Octet * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence< ::CORBA::Octet>
    (max, length, buffer, release)
{}

CarlaData::ImageSensor::_tao_seq_CORBA_Octet_::~_tao_seq_CORBA_Octet_ (void)
{}

#endif /* end #if !defined */
// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:51


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CarlaData::RadarSensor &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.depth) &&
    (strm << _tao_aggregate.azimuth) &&
    (strm << _tao_aggregate.altitude) &&
    (strm << _tao_aggregate.velocity) &&
    (strm << _tao_aggregate.ego_velocity);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CarlaData::RadarSensor &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.depth) &&
    (strm >> _tao_aggregate.azimuth) &&
    (strm >> _tao_aggregate.altitude) &&
    (strm >> _tao_aggregate.velocity) &&
    (strm >> _tao_aggregate.ego_velocity);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:51


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CarlaData::VehicleOdometry &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.throttle) &&
    (strm << _tao_aggregate.brake) &&
    (strm << _tao_aggregate.steering);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CarlaData::VehicleOdometry &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.throttle) &&
    (strm >> _tao_aggregate.brake) &&
    (strm >> _tao_aggregate.steering);
}

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:95

#if !defined _TAO_CDR_OP_CarlaData_ImageSensor__tao_seq_CORBA_Octet__CPP_
#define _TAO_CDR_OP_CarlaData_ImageSensor__tao_seq_CORBA_Octet__CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CarlaData::ImageSensor::_tao_seq_CORBA_Octet_ &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CarlaData::ImageSensor::_tao_seq_CORBA_Octet_ &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_CarlaData_ImageSensor__tao_seq_CORBA_Octet__CPP_ */
// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:51


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const CarlaData::ImageSensor &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.raw_data) &&
    (strm << _tao_aggregate.height) &&
    (strm << _tao_aggregate.width) &&
    (strm << ::ACE_OutputCDR::from_uint8 (_tao_aggregate.pixel_size)) &&
    (strm << _tao_aggregate.image_type);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    CarlaData::ImageSensor &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.raw_data) &&
    (strm >> _tao_aggregate.height) &&
    (strm >> _tao_aggregate.width) &&
    (strm >> ::ACE_InputCDR::to_uint8 (_tao_aggregate.pixel_size)) &&
    (strm >> _tao_aggregate.image_type);
}

TAO_END_VERSIONED_NAMESPACE_DECL



